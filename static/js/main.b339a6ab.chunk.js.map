{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","sortLength","setSortLength","isReverse","setIsReverse","visibleGoods","goods","sort","good1","good2","localeCompare","goods1","goods2","length","reverse","getPreparedGoods","className","type","onClick","cn","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAa,sBACbC,EAAoB,iBAuBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EA1BR,SAA0BC,EAA1B,GAAwE,IAArCP,EAAoC,EAApCA,UAAWE,EAAyB,EAAzBA,WAAYE,EAAa,EAAbA,UACpDE,EAAY,UAAOX,GAiBvB,OAfIK,IAAcJ,IAChBU,EAAeA,EACZE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,OAG5CR,IAAeL,IACjBS,EAAeA,EAAaE,MAC1B,SAACI,EAAQC,GAAT,OAAoBD,EAAOE,OAASD,EAAOC,WAI3CV,IACFE,EAAeA,EAAaS,WAGvBT,EAQcU,CAAiBrB,EAAiB,CACrDK,YACAE,aACAE,cAGF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,WACPlB,EAAaL,GACbO,EAAc,KAEhBc,UAAWG,IAAG,SAAU,UACtB,CACE,WAAYpB,IAAcJ,IARhC,iCAcA,wBACEsB,KAAK,SACLC,QAAS,WACPhB,EAAcN,GACdI,EAAa,KAEfgB,UAAWG,IAAG,SAAU,aACtB,CACE,WAAYlB,IAAeL,IARjC,4BAeA,wBACEqB,KAAK,SACLC,QAAS,WACPd,GAAa,SAAAgB,GAAI,OAAKA,MAExBJ,UAAWG,IAAG,SAAU,aACtB,CACE,GAAIhB,EACJ,YAAaA,IARnB,sBAcEJ,GAAaE,GAAcE,IAC3B,wBACEc,KAAK,SACLC,QAAS,WACPlB,EAAa,IACbE,EAAc,IACdE,EAAa,KAEfY,UAAU,4BAPZ,sBAeJ,6BACGX,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b339a6ab.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD = 'Sort alphabetically';\nconst SORT_FIELD_LENGTH = 'Sort by length';\n\nfunction getPreparedGoods(goods, { sortField, sortLength, isReverse }) {\n  let visibleGoods = [...goodsFromServer];\n\n  if (sortField === SORT_FIELD) {\n    visibleGoods = visibleGoods\n      .sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (sortLength === SORT_FIELD_LENGTH) {\n    visibleGoods = visibleGoods.sort(\n      (goods1, goods2) => goods1.length - goods2.length,\n    );\n  }\n\n  if (isReverse) {\n    visibleGoods = visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortLength, setSortLength] = useState('');\n  const [isReverse, setIsReverse] = useState('');\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    sortLength,\n    isReverse,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSortField(SORT_FIELD);\n            setSortLength('');\n          }}\n          className={cn('button', 'is-info',\n            {\n              'is-light': sortField !== SORT_FIELD,\n            })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSortLength(SORT_FIELD_LENGTH);\n            setSortField('');\n          }}\n          className={cn('button', 'is-success',\n            {\n              'is-light': sortLength !== SORT_FIELD_LENGTH,\n            })\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsReverse(prev => !prev);\n          }}\n          className={cn('button', 'is-warning',\n            {\n              '': isReverse,\n              'is-light': !isReverse,\n            })\n          }\n        >\n          Reverse\n        </button>\n        {(sortField || sortLength || isReverse) && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortField('');\n              setSortLength('');\n              setIsReverse('');\n            }}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}